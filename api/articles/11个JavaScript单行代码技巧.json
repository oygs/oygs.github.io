{"title":"11 个 JavaScript 单行代码技巧","uid":"d6d6a7d81f75ad96a8fb728f1eea1f5d","slug":"11个JavaScript单行代码技巧","date":"2021-09-21T09:51:00.000Z","updated":"2021-12-17T09:54:03.000Z","comments":true,"path":"api/articles/11个JavaScript单行代码技巧.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/70HjaV.png","content":"<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>美总是简单和谐的，代码也是一样</p>\n<span id=\"more\"></span>\n\n\n<p>用简单的逻辑和尽可能少的代码来解决一个复杂的问题。随着 <code>ES6 箭头函数</code>的引入，可以创建看起来优雅和简单的单行代码。</p>\n<p>给大家分享 11 个 JavaScript 单行代码技巧</p>\n<p><strong>1、获取字符串中的字符数</strong></p>\n<p>获取字符数是一个有用的实用程序，在许多情况下都很有用。你可以使用它来获取空格数和随后的单词数，或者这可用于获取字符串中某个分隔符的计数。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const characterCount &#x3D; (str, char) &#x3D;&gt; str.split(char).length - 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这个想法非常简单。我们使用传递的参数 char 拆分字符串并获得返回数组的长度。因为每一次分割字符串，都会比分割器多一根；所以减去 1，我们有一个 characterCount 单行。</p>\n<p><strong>2、 检查对象是否为空</strong></p>\n<p>检查对象的空性实际上比看起来要困难得多。每次检查对象是否等于 {} 都会返回 false，即使该对象为空。</p>\n<p>幸运的是，下面的单行代码正是我们想要的。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const isEmpty &#x3D; obj &#x3D;&gt; Reflect.ownKeys(obj).length &#x3D;&#x3D;&#x3D; 0 &amp;&amp; obj.constructor &#x3D;&#x3D;&#x3D; Object<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在这一行中，我们检查对象的键的长度是否等于 0，以及传递的参数是否为实际对象。</p>\n<p><strong>3、等待一定时间后执行</strong></p>\n<p>在这个单行代码中，我们将接触一些异步编程。这个想法很简单。</p>\n<p>在运行代码时，如果你想等待一定的时间，这里是wait one-liner：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const wait &#x3D; async (milliseconds) &#x3D;&gt; new Promise((resolve) &#x3D;&gt; setTimeout(resolve, milliseconds));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在wait one-liner中，我们创建一个promise并在给定的时间后使用setTimeout函数解决它。</p>\n<p><strong>4、获取两个日期之间的天差</strong></p>\n<p>在开发 Web 应用程序时，日期通常是最容易混淆的部分，因为有许多概念很容易被误算。</p>\n<p>这是一个强大的单行程序来计算两个日期之间的天差。但还有更多的事情要做。和我一样，你可以创建自己的单线来计算月、年差等。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const daysBetween &#x3D; (date1, date2) &#x3D;&gt; Math.ceil(Math.abs(date1 - date2) &#x2F; (1000 * 60 * 60 * 24))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这种单行背后的逻辑很容易理解。当两个日期相减时，返回值是以毫秒为单位的差值。要将毫秒转换为天，我们必须将其分别除以毫秒、秒、分钟和小时。</p>\n<p><strong>5、重定向到另一个 URL</strong></p>\n<p>如果你曾经创建过一个真实的网站，我敢肯定你会遇到身份验证逻辑。例如，非管理员用户不应该能够访问 /admin 路由。如果用户尝试，那么，你必须将其重定向到另一个 URL。</p>\n<p>这种单线正好适用于我上面提到的情况，但我认为你可以找到更多的用例。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const redirect &#x3D; url &#x3D;&gt; location.href &#x3D; url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>location 是全局 window 对象上的一个方法，设置 href 属性的行为与用户点击链接的行为相同。</p>\n<p><strong>6、检查设备上的触摸支持</strong></p>\n<p>随着可以连接到互联网的设备越来越多，创建响应式网站的必要性也越来越高。20 年前，开发者应该考虑过桌面版网站，但今天超过 50% 的网络流量来自触摸设备。</p>\n<p>因此，基于设备的触摸支持采取一些行动是一个如此重要的概念。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const touchSupported &#x3D; () &#x3D;&gt; (&#39;ontouchstart&#39; in window || DocumentTouch &amp;&amp; document instanceof DocumentTouch)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在这一行中，我们正在检查文档是否支持 touchstart 事件。</p>\n<p><strong>7、在元素后插入一串 HTML</strong></p>\n<p>开发 Web 应用程序，使用 JavaScript 更新 DOM 是一件很常见的事情。有一些基本的方法可以完成工作，但是当情况变得复杂时，就很难克服。</p>\n<p>这是在 HTML 元素之后立即注入一串 HTML 的单行代码。通过几分钟的思考和谷歌搜索，我相信你可以找到这个单行的之前版本。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const insertHTMLAfter &#x3D; (html, el) &#x3D;&gt; el.insertAdjacentHTML(&#39;afterend&#39;, html)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>8、打乱数组</strong> 在开发中混洗一组数据是你随时可能遇到的常见情况，不幸的是，JavaScript 中没有内置数组的混洗方法。但是，这是你可以每天使用的 shuffle</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const shuffle &#x3D; arr &#x3D;&gt; arr.sort(() &#x3D;&gt; 0.5 - Math.random())<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>它利用数组的排序方法，在数组的前一个元素之前或之后进行随机排序。</p>\n<p><strong>9、在网页上获取选定的文本</strong></p>\n<p>浏览器在全局 windows 对象上有一个名为 getSelection 的内置方法。</p>\n<p>使用此方法，你可以创建一个单行，返回网页上突出显示或选定的文本。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const getSelectedText &#x3D; () &#x3D;&gt; window.getSelection().toString()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>10、 获取一个随机布尔值</strong></p>\n<p>在编程时，尤其是在编写游戏时，有时你会想要随机采取行动。在这种情况下，下面的单行非常方便。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const getRandomBoolean &#x3D; () &#x3D;&gt; Math.random() &gt;&#x3D; 0.5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上面的单行有 50/50 的机会返回 true 或 false。因为生成的随机数大于 0.5 的概率等于较小的概率。</p>\n<p>但是，例如，如果你想获得一个概率为 70% 错误的随机布尔值，那么，你可以简单地将 0.5 更改为 0.7，依此类推。</p>\n<p><strong>11、计算数组的平均值</strong></p>\n<p>可以使用多种方法计算数组的平均值。但道理对所有人都是一样的。你必须获得数组及其长度的总和；然后除法给出平均值。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const average &#x3D; (arr) &#x3D;&gt; arr.reduce((a, b) &#x3D;&gt; a + b) &#x2F; arr.length<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在平均单行中，我们使用 reduce 来获取一行中的数组的总和，而不是使用循环。然后，我们将其除以数组长度，这是数组的平均值。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最近要上网课，所以一天最多两更了</p></blockquote>\n","text":"前言美总是简单和谐的，代码也是一样 用简单的逻辑和尽可能少的代码来解决一个复杂的问题。随着 ES6 箭头函数的引入，可以创建看起来优雅和简单的单行代码。 给大家分享 11 个 JavaScript 单行代码技巧 1、获取字符串中的字符数 获取字符数是一个有用的实用程序，在许多情况...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":2,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/tags/JavaScript.json"},{"name":"代码优化","slug":"代码优化","count":2,"path":"api/tags/代码优化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li></ol>","author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript实现简单的模拟时钟","uid":"f406e834f117c12fc6b8a0a2763ae2dd","slug":"JavaScript实现简单的模拟时钟","date":"2021-10-04T10:08:00.000Z","updated":"2021-12-17T10:10:29.000Z","comments":true,"path":"api/articles/JavaScript实现简单的模拟时钟.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/70qIXj.jpg","text":"如何使用HTML、CSS和JavaScript代码制作模拟时钟这一款的形状采用黑色新拟物风格设计。用三个指针来表示小时、分钟和秒。此时钟盘面使用了符号而不是1到12的数字。 在我使用了新拟物风格设计制作之后，时钟的背景和页面的背景我也使用了相同的颜色。首先，我在网页上制作一个30...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":2,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/tags/JavaScript.json"},{"name":"程序设计","slug":"程序设计","count":1,"path":"api/tags/程序设计.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"一款唯美的简约主页","uid":"82ea438609ec664637fe59af5d35d8a4","slug":"一款唯美的简约主页","date":"2021-09-15T07:01:00.000Z","updated":"2021-12-17T10:49:10.000Z","comments":true,"path":"api/articles/一款唯美的简约主页.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/70LbKH.jpg","text":"前言今天在网上看到一款简约但不简单的个人主页，分享给大家 效果演示地址 ：vin.nov.vin 带有樱花飘落，有API功能，有弹窗功能，有歌词滚动功能… 下载 ","link":"","photos":[],"count_time":{"symbolsCount":88,"symbolsTime":"1 mins."},"categories":[{"name":"随笔记录","slug":"随笔记录","count":7,"path":"api/categories/随笔记录.json"}],"tags":[{"name":"网站搭建","slug":"网站搭建","count":2,"path":"api/tags/网站搭建.json"},{"name":"个人主页","slug":"个人主页","count":1,"path":"api/tags/个人主页.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
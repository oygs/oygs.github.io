{"title":"Typecho数据库常用API","uid":"aae35cfff3159c19f236fe7e835ac166","slug":"2021-11-24-Typecho数据库常用API","date":"2021-11-24T10:59:00.000Z","updated":"2021-12-17T11:01:39.000Z","comments":true,"path":"api/articles/2021-11-24-Typecho数据库常用API.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7B2fnU.png","content":"<p>Typecho数据库提供了非常易用的api，和原生SQL写法没有太大的差别</p>\n<span id=\"more\"></span>\n\n\n<p>同时也很好地处理了SQL常见的安全问题，如sql注入。本文从实用角度出发，介绍了typecho操作数据库的常用场景以及相关api用法。</p>\n<h2 id=\"表创建和删除\"><a href=\"#表创建和删除\" class=\"headerlink\" title=\"表创建和删除\"></a>表创建和删除</h2><p>在Typecho插件开发过程中，往往需要创建自己的表。上文提到Typecho_Db类中的query函数，可用于执行所有sql语句，因此我们使用query()来进行表的创建、修改或者删除。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$db&#x3D; Typecho_Db::get();\n$prefix &#x3D; $db-&gt;getPrefix();\n$db-&gt;query(&#39;create table &#39;.$prefix.&#39;metas xxxxx&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意，使用query方式创建表的时候，需要在表明前手动添加<code>$prefix</code>前缀，否则在后面的使用过程中会造成困惑。<br>还可以使用<code>table.</code>来代替$prefix，typecho会自动识别并替换成指定的前缀。</p></blockquote>\n<p>同理，修改或者删除Typecho数据库中表，按照同样的方式调用query即可。</p>\n<h2 id=\"数据查询\"><a href=\"#数据查询\" class=\"headerlink\" title=\"数据查询\"></a>数据查询</h2><h3 id=\"1-select，查询表数据\"><a href=\"#1-select，查询表数据\" class=\"headerlink\" title=\"1. select，查询表数据\"></a>1. select，查询表数据</h3><p>select语句是可以说Typecho插件开发中最常用的sql调用。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$db &#x3D; Typecho_Db::get();\n$query&#x3D; $db-&gt;select()-&gt;from(&#39;table.metas&#39;);\n$result &#x3D; $db-&gt;fetchAll($query);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>说明：<br>typecho中，<code>.</code>号具有特定的意义，这里<code>table.metas</code>表示这是一个metas表。实际上，typecho是自动将<code>table.</code>的字符使用str_replace替换成了config.inc.php中设定的前缀。</p>\n<p>举例：<br>a. <code>$db-&gt;select()-&gt;from(&#39;table.metas&#39;);</code>将生成<code>SELECT * FROM typecho_metas WHERE (</code>mid<code>= &#39;2&#39; )</code>，其中<code>typecho_</code>是表前缀；<br>b. 而<code>$db-&gt;select()-&gt;from(&#39;metas&#39;);</code>将生成<code>SELECT * FROM metas WHERE (</code>mid<code>= &#39;2&#39; )</code>，注意这里没有了表前缀。</p></blockquote>\n<p><strong>指定表字段查询</strong><br>有时为了提高查询性能，需要指定查询表中特定的几个字段，那么可以使用下面的方式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query&#x3D; $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;); \necho $query; &#x2F;&#x2F;SELECT &#96;mid&#96; , &#96;name&#96; FROM typecho_metas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果联合查询中，两个表存在相同的字段名，那么可以使用table.来指定表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query &#x3D; $db-&gt;select(&#39;table.contents.cid&#39;)-&gt;from(&#39;table.contents&#39;)-&gt;join....<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>指定查询条件</strong><br>指定SQL查询的where语句，是最常用的api调用。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query&#x3D; $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid &#x3D; ?&#39;, 2); \necho $query; &#x2F;&#x2F;SELECT * FROM typecho_metas WHERE (&#96;mid&#96; &#x3D; &#39;2&#39; )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如需要指定多个查询条件，直接多次调用where即可，将生成and关系的where条件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid &#x3D; ?&#39;, 2)-&gt;where(&#39;name like ? &#39;, $name);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>使用OR关系的查询条件</strong><br>可以使用orWhere()函数来指定SQL查询的或条件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;where(&#39;mid &#x3D; ?&#39;, 2)-&gt;orWhere(&#39;mid &#x3D; ? &#39;, 3);\n&#x2F;&#x2F;SELECT &#96;mid&#96; , &#96;name&#96; FROM typecho_metas WHERE (&#96;mid&#96; &#x3D; &#39;2&#39; ) OR (&#96;mid&#96; &#x3D; &#39;3&#39; )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><strong>指定查询范围</strong><br>在需要分页的场景下，分页是必需的操作。offset()和limit()分别用于指定起始位置和结束位置，即指定查询范围。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query &#x3D; $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;offset(2)-&gt;limit(3);\necho $query;&#x2F;&#x2F;SELECT &#96;mid&#96; , &#96;name&#96; FROM typecho_metas LIMIT 3 OFFSET 2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>Typecho中，还提供了一种简写的方法，见page()函数。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query &#x3D; $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;page(3,10);\necho $query;&#x2F;&#x2F;SELECT &#96;mid&#96; , &#96;name&#96; FROM typecho_metas LIMIT 10 OFFSET 20\n&#x2F;&#x2F;表示取第三页，并取10条记录。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>对查询结果进行排序</strong><br>在Typecho中，使用order()函数和Typecho_Db::SORT_DESC指定查询结果的排序方式。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query &#x3D; $db-&gt;select(&#39;mid&#39;,&#39;name&#39;)-&gt;from(&#39;table.metas&#39;)-&gt;order(&#39;mid&#39;,Typecho_Db::SORT_DESC);\necho $query;&#x2F;&#x2F;SELECT &#96;mid&#96; , &#96;name&#96; FROM typecho_metas ORDER BY &#96;mid&#96; DESC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Tips: Typecho_Db::SORT_ASC 表示升序排序，Typecho_Db::SORT_DESC表示降序排序</p></blockquote>\n<p><strong>联合查询</strong><br>联合查询是SQL的常用语法，在Typecho中，同样使用内置函数<code>join()</code>方便地进行联合查询。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$query &#x3D; $db-&gt;select()\n    -&gt;from(&#39;table.contents&#39;)\n    -&gt;join(&#39;table.comments&#39;, &#39;table.contents.cid &#x3D; table.comments.cid&#39;,Typecho_Db::LEFT_JOIN)\n    -&gt;where(&#39;table.contents.type &#x3D; ?&#39;, &#39;post&#39;);\necho $query;\n&#x2F;&#x2F;SELECT * FROM typechocontents LEFT JOIN typecho_comments ON typecho_contents.&#96;cid&#96; &#x3D; typecho_comments.&#96;cid&#96; WHERE (typecho_contents.&#96;type&#96; &#x3D; &#39;post&#39; )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-update，更新表数据\"><a href=\"#2-update，更新表数据\" class=\"headerlink\" title=\"2. update，更新表数据\"></a>2. update，更新表数据</h3><p>Typecho中，使用<code>update()</code>函数来进行更新表操作。但注意，update操作，需要借助于query执行。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$update &#x3D; $db-&gt;update(&#39;table.metas&#39;)-&gt;rows(array(&#39;name&#39;&#x3D;&gt;&#39;case_in_cn&#39;))-&gt;where(&#39;mid&#x3D;?&#39;,6);\necho $update;&#x2F;&#x2F;UPDATE typecho_metas SET &#96;name&#96; &#x3D; &#39;some_name&#39; WHERE (&#96;mid&#96;&#x3D;&#39;6&#39; )\n&#x2F;&#x2F;执行后，返回收影响的行数。\n$updateRows&#x3D; $db-&gt;query($update);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-insert，插入数据\"><a href=\"#3-insert，插入数据\" class=\"headerlink\" title=\"3. insert，插入数据\"></a>3. insert，插入数据</h3><p>Typecho中，使用<code>insert()</code>函数来进行表插入操作。同样，insert操作需要借助于query函数。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$insert &#x3D; $db-&gt;insert(&#39;table.metas&#39;)\n    -&gt;rows(array(&#39;mid&#39; &#x3D;&gt; &#39;22&#39;, &#39;name&#39; &#x3D;&gt; &#39;hello world&#39;));\n&#x2F;&#x2F;将构建好的sql执行, 如果你的主键id是自增型的还会返回insert id\n$insertId &#x3D; $db-&gt;query($insert);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-delete，删除数据\"><a href=\"#4-delete，删除数据\" class=\"headerlink\" title=\"4. delete，删除数据\"></a>4. delete，删除数据</h3><p>Typecho中使用<code>delete()</code>函数来删除数据表中的行。delete操作用于删除数据表中指定的行，同样需要借助query函数执行。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$delete &#x3D; $db-&gt;delete(&#39;table.metas&#39;)\n    -&gt;where(&#39;mid &#x3D; ?&#39;, 2);\n&#x2F;&#x2F;将构建好的sql执行, 会自动返回已经删除的记录数\n$deletedRows &#x3D; $db-&gt;query($delete);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据库调试\"><a href=\"#数据库调试\" class=\"headerlink\" title=\"数据库调试\"></a>数据库调试</h2><h3 id=\"查看查询语句\"><a href=\"#查看查询语句\" class=\"headerlink\" title=\"查看查询语句\"></a>查看查询语句</h3><p>在Typecho调试过程中，打印sql语句往往是很有帮助的。对于大于5.2版本的php，直接echo $query即可，对于小于5.2版本，则需要显式调用__toString()函数</p>\n<pre><code>$select = $db-&gt;select()-&gt;from(&#39;table.metas&#39;);\n//如果版本大于php5.2\necho $select;\n//如果小于php5.2\necho $select-&gt;__toString();\n</code></pre>\n","text":"Typecho数据库提供了非常易用的api，和原生SQL写法没有太大的差别 同时也很好地处理了SQL常见的安全问题，如sql注入。本文从实用角度出发，介绍了typecho操作数据库的常用场景以及相关api用法。 表创建和删除在Typecho插件开发过程中，往往需要创建自己的表。上...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":4,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"typecho","slug":"typecho","count":2,"path":"api/tags/typecho.json"},{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"},{"name":"API","slug":"API","count":1,"path":"api/tags/API.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">表创建和删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">数据查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-select%EF%BC%8C%E6%9F%A5%E8%AF%A2%E8%A1%A8%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1. select，查询表数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-update%EF%BC%8C%E6%9B%B4%E6%96%B0%E8%A1%A8%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2. update，更新表数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-insert%EF%BC%8C%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">3. insert，插入数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-delete%EF%BC%8C%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">4. delete，删除数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">数据库调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">查看查询语句</span></a></li></ol></li></ol>","author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"用 hyperbeam 魔/法/上/网","uid":"c480f9dca4418c66ef21d2cc18791265","slug":"2021-11-26-用_hyperbeam_魔_法_上_网","date":"2021-11-26T11:01:00.000Z","updated":"2021-12-17T11:03:00.000Z","comments":true,"path":"api/articles/2021-11-26-用_hyperbeam_魔_法_上_网.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7BROGn.png","text":"前言分享一下前几天发现的一个魔/法/上/网网站hyperbeam，为什么说它可以魔/法/上/网呢？因为它的原理类似于远程操控一台国外电脑，并且内置一个远程浏览器，通过这个浏览器就可以查阅学术文献资料了(ಡωಡ)。 使用使用前的步骤非常简单，只需要用邮箱简单注册一下！（可以使用国内...","link":"","photos":[],"count_time":{"symbolsCount":343,"symbolsTime":"1 mins."},"categories":[{"name":"随笔记录","slug":"随笔记录","count":11,"path":"api/categories/随笔记录.json"}],"tags":[{"name":"魔/法/上/网","slug":"魔-法-上-网","count":2,"path":"api/tags/魔-法-上-网.json"},{"name":"网站分享","slug":"网站分享","count":1,"path":"api/tags/网站分享.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"升级typecho1.2失败了","uid":"2436ab7640fd51ffd663178978fde876","slug":"2021-11-22-升级typecho1.2失败了","date":"2021-11-22T10:57:00.000Z","updated":"2021-12-17T10:59:31.000Z","comments":true,"path":"api/articles/2021-11-22-升级typecho1.2失败了.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7Brv7R.png","text":"尝试将博客程序升级了一下1.2，最后失败了，升级使用的版本是typecho1.2公测版和PHP8.1 其实这次升级刚开始是成功的:@(深思) 在升级之前我考虑过可能会失败的地方，比如主题友链插件可能不支持1.2等，但出问题的地方竟然是在新建文章，之前考虑到的插件反而完美支持，点击...","link":"","photos":[],"count_time":{"symbolsCount":237,"symbolsTime":"1 mins."},"categories":[{"name":"博客相关","slug":"博客相关","count":7,"path":"api/categories/博客相关.json"}],"tags":[{"name":"网站优化","slug":"网站优化","count":1,"path":"api/tags/网站优化.json"},{"name":"typecho","slug":"typecho","count":2,"path":"api/tags/typecho.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
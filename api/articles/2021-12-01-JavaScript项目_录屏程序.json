{"title":"JavaScript项目|录屏程序","uid":"faf710febfc2cc5dfd45710254839b29","slug":"2021-12-01-JavaScript项目_录屏程序","date":"2021-12-01T11:04:00.000Z","updated":"2021-12-20T05:57:46.000Z","comments":true,"path":"api/articles/2021-12-01-JavaScript项目_录屏程序.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7BWHOK.png","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>尽管JavaScript在是浏览器上运行，但我们不但可以使用JS来记录活动标签页，而且还可以记录任意标签页或整个屏幕。当然js可不止这些，因为JavaScript 可以对网页行为进行编程</p>\n<span id=\"more\"></span>\n\n<h2 id=\"HTML部分：\"><a href=\"#HTML部分：\" class=\"headerlink\" title=\"HTML部分：\"></a>HTML部分：</h2><p>首先需要一个 HTML 文件，因为得有录制按钮和视频元素，而且将在这个视频元素里播放录制的视频</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Parcel Sandbox&lt;&#x2F;title&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;\n  &lt;&#x2F;head&gt;\n  &lt;body&gt;\n    &lt;video class&#x3D;&quot;video&quot; width&#x3D;&quot;600px&quot; controls&gt;&lt;&#x2F;video&gt;\n    &lt;button class&#x3D;&quot;record-btn&quot;&gt;record&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;index.js&quot;&gt;&lt;&#x2F;script&gt;\n  &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们还需要一个 JS 文件，规范命名为 index.js，先进行测试一下。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let btn &#x3D; document.querySelector(&quot;.record-btn&quot;);\nbtn.addEventListener(&quot;click&quot;, function () &#123;\n  console.log(&quot;hello&quot;);\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果现在在浏览器中打开它并单击按钮，应该可以在控制台中看到<code>hello</code>。<br>好的，测试完毕，现在替换<code>console.log</code>，显示视频信息流。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let btn &#x3D; document.querySelector(&quot;.record-btn&quot;);\nbtn.addEventListener(&quot;click&quot;, async function () &#123;\n  let stream &#x3D; await navigator.mediaDevices.getDisplayMedia(&#123;\n    video: true\n  &#125;);\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>现在，如果你点击按钮，应该可以看到这个弹出窗口。<br><img src=\"https://s4.ax1x.com/2021/12/04/o0TBCR.png\"><br>现在可以开始录制了？还不行，还要更复杂一些。必须自己录制视频。现在这里可以用<code>MediaRecorder</code>来进行录制。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let btn &#x3D; document.querySelector(&quot;.record-btn&quot;)\nbtn.addEventListener(&quot;click&quot;, async function () &#123;\n  let stream &#x3D; await navigator.mediaDevices.getDisplayMedia(&#123;\n    video: true\n  &#125;)\n\n  &#x2F;&#x2F;判断浏览器是否支持\n  const mime &#x3D; MediaRecorder.isTypeSupported(&quot;video&#x2F;webm; codecs&#x3D;vp9&quot;) \n             ? &quot;video&#x2F;webm; codecs&#x3D;vp9&quot; \n             : &quot;video&#x2F;webm&quot;\n    let mediaRecorder &#x3D; new MediaRecorder(stream, &#123;\n        mimeType: mime\n    &#125;)\n    &#x2F;&#x2F;开始手动录制\n    mediaRecorder.start()\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当录制屏幕时，mediaRecorder将以块的形式为我们提供数据，我们需要将这些数据存储在一个变量中。</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let btn &#x3D; document.querySelector(&quot;.record-btn&quot;)\nbtn.addEventListener(&quot;click&quot;, async function () &#123;\n  let stream &#x3D; await navigator.mediaDevices.getDisplayMedia(&#123;\n    video: true\n  &#125;)\n  &#x2F;&#x2F;判断浏览器是否支持\n  const mime &#x3D; MediaRecorder.isTypeSupported(&quot;video&#x2F;webm; codecs&#x3D;vp9&quot;) \n             ? &quot;video&#x2F;webm; codecs&#x3D;vp9&quot; \n             : &quot;video&#x2F;webm&quot;\n    let mediaRecorder &#x3D; new MediaRecorder(stream, &#123;\n        mimeType: mime\n    &#125;)\n    let chunks &#x3D; []\n    mediaRecorder.addEventListener(&#39;dataavailable&#39;, function(e) &#123;\n        chunks.push(e.data)\n    &#125;)\n    &#x2F;&#x2F;开始手动录制\n    mediaRecorder.start()\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>当点击停止共享按钮时，如果希望录制的视频在视频元素中播放，可以在</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mediaRecorder.start()\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>前加入</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let video &#x3D; document.querySelector(&quot;.video&quot;)\n      video.src &#x3D; URL.createObjectURL(blob)\n  &#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>最后，自动下载录制的视频。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">let btn &#x3D; document.querySelector(&quot;.record-btn&quot;)\nbtn.addEventListener(&quot;click&quot;, async function () &#123;\n  let stream &#x3D; await navigator.mediaDevices.getDisplayMedia(&#123;\n    video: true\n  &#125;)\n  &#x2F;&#x2F;判断浏览器是否支持\n  const mime &#x3D; MediaRecorder.isTypeSupported(&quot;video&#x2F;webm; codecs&#x3D;vp9&quot;) \n             ? &quot;video&#x2F;webm; codecs&#x3D;vp9&quot; \n             : &quot;video&#x2F;webm&quot;\n    let mediaRecorder &#x3D; new MediaRecorder(stream, &#123;\n        mimeType: mime\n    &#125;)\n    let chunks &#x3D; []\n    mediaRecorder.addEventListener(&#39;dataavailable&#39;, function(e) &#123;\n        chunks.push(e.data)\n    &#125;)\n    mediaRecorder.addEventListener(&#39;stop&#39;, function()&#123;\n      let blob &#x3D; new Blob(chunks, &#123;\n          type: chunks[0].type\n      &#125;)\n      let url &#x3D; URL.createObjectURL(blob)\n      let video &#x3D; document.querySelector(&quot;video&quot;)\n      video.src &#x3D; url\n      let a &#x3D; document.createElement(&#39;a&#39;)\n      a.href &#x3D; url\n      a.download &#x3D; &#39;video.webm&#39;\n      a.click()\n  &#125;)\n    &#x2F;&#x2F;开始手动录制\n    mediaRecorder.start()\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"前言尽管JavaScript在是浏览器上运行，但我们不但可以使用JS来记录活动标签页，而且还可以记录任意标签页或整个屏幕。当然js可不止这些，因为JavaScript 可以对网页行为进行编程 HTML部分：首先需要一个 HTML 文件，因为得有录制按钮和视频元素，而且将在这个视频...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":4,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"},{"name":"程序设计","slug":"程序设计","count":2,"path":"api/tags/程序设计.json"},{"name":"项目","slug":"项目","count":1,"path":"api/tags/项目.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HTML%E9%83%A8%E5%88%86%EF%BC%9A\"><span class=\"toc-text\">HTML部分：</span></a></li></ol>","author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"推特主题 ColibriSM 前端汉化","uid":"4a3c45c1a62a0795f2dafef6b3bdfdfd","slug":"2021-12-15-推特主题_ColibriSM_前端汉化","date":"2021-12-15T10:34:00.000Z","updated":"2021-12-20T13:45:09.000Z","comments":true,"path":"api/articles/2021-12-15-推特主题_ColibriSM_前端汉化.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7BfF0S.jpg","text":"ColibriSM这是一个共享媒体内容的现代平台，类似于Twitter，Instagram等社交网络。 ColibriSM是创建自己的社交平台的最佳选择之一，官方售价$35 官方的预览网站：demo ColibriSM没有中文版本包括前后台，后台汉化对于我这个cj来说有点难度，但...","link":"","photos":[],"count_time":{"symbolsCount":334,"symbolsTime":"1 mins."},"categories":[{"name":"随笔记录","slug":"随笔记录","count":11,"path":"api/categories/随笔记录.json"}],"tags":[{"name":"网站语言","slug":"网站语言","count":2,"path":"api/tags/网站语言.json"},{"name":"ColibriSM","slug":"ColibriSM","count":1,"path":"api/tags/ColibriSM.json"},{"name":"推特","slug":"推特","count":1,"path":"api/tags/推特.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"英雄联盟：双城之战","uid":"ca3e9c3dedf4709402962e3579cab97a","slug":"2021-11-27-英雄联盟：双城之战","date":"2021-11-27T11:03:00.000Z","updated":"2021-12-17T11:04:24.000Z","comments":true,"path":"api/articles/2021-11-27-英雄联盟：双城之战.json","keywords":null,"cover":"https://s4.ax1x.com/2022/01/18/7BWesK.png","text":"终于刷完了《英雄联盟：双城之战》，整剧以金克斯R技能炮轰皮城议会结束， 回想9剧集发生在金克斯身上的遭遇你说一切是她的错，每一件事或多或少她都被误导或者被欺骗，都有别人的责任，你说一切都不是她的错，每一次加重事态的爆炸按钮都是她按下的，并且每件事情发生后，金克斯做出的选择都是一种...","link":"","photos":[],"count_time":{"symbolsCount":206,"symbolsTime":"1 mins."},"categories":[{"name":"影音阅读","slug":"影音阅读","count":2,"path":"api/categories/影音阅读.json"}],"tags":[{"name":"英雄联盟","slug":"英雄联盟","count":2,"path":"api/tags/英雄联盟.json"},{"name":"动漫","slug":"动漫","count":1,"path":"api/tags/动漫.json"}],"author":{"name":"XSTAR","slug":"blog-author","avatar":"https://s4.ax1x.com/2022/01/15/7JGwhF.jpg","link":"/","description":"正在创作一切未来","socials":{"github":"https://github.com/oygs","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}